class Solution:
    
    
    
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        
        nums.sort()
        # print(nums)
        
        ans = []
        for c1 in range(len(nums)-2):
            
            
            n1 = nums[c1]
            c2 = c1+1
            n2 = nums[c2]
            c3 = len(nums)-1
            n3 = nums[c3]
            
            if n1>0:
                return ans
            
            if c1>0 and (nums[c1] == nums[c1-1]):
                continue
            
            while c2 < c3:
                # print(nums[c1] + nums[c2]+nums[c3])
                if (nums[c1] + nums[c2]+nums[c3]) == 0:
                    ans.append([nums[c1],nums[c2],nums[c3]])
                    while c3>0 and (nums[c3-1] == nums[c3]):
                        c3-=1
                    c3-=1
                    while (c2< (len(nums)-1))  and (nums[c2+1] == nums[c2]):
                        c2+=1
                    c2+=1
                    
                elif (nums[c1] + nums[c2]+nums[c3]) > 0:
                    while c3 >0 and nums[c3-1] == nums[c3]:
                        c3-=1
                    c3-=1
                    
                elif (nums[c1] + nums[c2]+nums[c3]) < 0:
                    while c2 < len(nums)-1 and nums[c2+1] == nums[c2]:
                        c2+=1
                    c2+=1
                    
            
            
                                    
                                
                        
        return ans
            
